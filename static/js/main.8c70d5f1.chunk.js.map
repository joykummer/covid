{"version":3,"sources":["components/Cases/Cases.module.scss","components/Panel/Panel.module.scss","components/PageNotFound/PageNotFound.module.scss","store/types.ts","axios/index.js","store/actions/countryACasesAction.ts","store/actions/countryBCasesAction.ts","store/actions/chosenDatesAction.ts","store/actions/chosenCountriesAction.ts","components/Panel/index.tsx","components/Cases/index.tsx","components/PageNotFound/index.js","components/App/index.tsx","store/reducers/index.ts","store/reducers/CountryA.ts","store/reducers/CountryB.ts","store/reducers/Countries.ts","store/reducers/Dates.ts","store/index.tsx","index.tsx"],"names":["module","exports","SET_COUNTRY_A","SET_COUNTRY_B","SET_COUNTRIES","SET_DATES","Axios","axios","create","baseUrl","defaults","headers","post","countryACasesFunction","countryA","startDate","endDate","dispatch","a","get","params","from","to","response","cases","data","type","payload","request","countryBCasesFunction","countryB","console","log","chosenDatesAction","chosenDates","chosenDatesFunction","error","chosenCountriesAction","chosenCountries","chosenCountriesFunction","Panel","useSelector","state","countries","dates","useState","setCountryA","setCountryB","setStartDate","setEndDate","useDispatch","history","useHistory","countryList","getData","onSubmitHandler","event","preventDefault","push","combinedCountries","combinedDates","countriesAreEqual","toString","datesAreEqual","condition","updateCondition","length","className","styles","Container","onSubmit","Form","Countries","CountryContainer","Label","required","value","onChange","e","target","Country","disabled","map","country","label","Dates","DatesContainer","placeholderText","selected","date","dateFormat","Date","maxDate","minDate","active","Submit","Cases","countryACases","countryBCases","countryADetails","Array","countryBDetails","moment","currentDate","format","add","i","casesA","casesB","CasesContainer","width","height","strokeDasharray","dataKey","formatter","Intl","NumberFormat","stroke","PageNotFound","props","tryAgainHandler","onClick","App","basename","process","exact","path","component","reducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,eAAiB,gC,mBCAxED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,UAAY,yBAAyB,iBAAmB,gCAAgC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,qBAAqB,eAAiB,8BAA8B,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,wB,oBCAvXD,EAAOC,QAAU,CAAC,UAAY,kC,oPCDjBC,EAAgB,cAChBC,EAAgB,cAChBC,EAAgB,eAChBC,EAAY,W,SCCnBC,E,OAAQC,EAAMC,OAAO,CACzBC,QAAS,8CAGXH,EAAMI,SAASD,QANC,4CAOhBH,EAAMI,SAASC,QAAQC,KAAK,gBAAkB,mBAE/BN,QCDFO,EACX,SAACC,EAAUC,EAAWC,GAAtB,8CAAkC,WAAOC,GAAP,eAAAC,EAAA,+EAEPZ,EAAMa,IAAN,mDACuBL,EADvB,qBAErB,CAAEM,OAAQ,CAAEC,KAAMN,EAAWO,GAAIN,KAJL,OAExBO,EAFwB,OAM9BN,GAd8BO,EAcDD,EAASE,KAbnC,CACLC,KAAMxB,EACNyB,QAASH,KAKuB,oDAQ1B,KAAMD,SARoB,0CAUrB,KAAMA,UAVe,YAWnB,KAAMK,QAXa,0CAarB,KAAMA,SAbe,yEARD,IAACJ,IAQA,oBAAlC,uDCDWK,EACX,SAACC,EAAUf,EAAWC,GAAtB,8CAAkC,WAAOC,GAAP,eAAAC,EAAA,+EAEPZ,EAAMa,IAAN,mDACuBW,EADvB,qBAErB,CAAEV,OAAQ,CAAEC,KAAMN,EAAWO,GAAIN,KAJL,OAExBO,EAFwB,OAM9BN,GAdyBO,EAcDD,EAASE,KAb9B,CACLC,KAAMvB,EACNwB,QAASH,KAKuB,gDAQ9BO,QAAQC,IAAI,QAAZ,MAR8B,kCARN,IAACR,IAQK,oBAAlC,uDCTWS,EAAoB,SAACC,GAChC,MAAO,CACLR,KAAMrB,EACNsB,QAASO,IAIAC,EAAsB,SAACpB,EAAWC,GAAZ,8CAAwB,WAAOC,GAAP,SAAAC,EAAA,sDACzD,IAEED,EAASgB,EADW,CAAClB,EAAWC,KAEhC,MAAOoB,GACPL,QAAQC,IAAI,QAASI,GALkC,2CAAxB,uDCPtBC,EAAwB,SAACC,GACpC,MAAO,CACLZ,KAAMtB,EACNuB,QAASW,IAIAC,EACX,SAACzB,EAAUgB,GAAX,8CAAwB,WAAOb,GAAP,SAAAC,EAAA,sDACtB,IAEED,EAASoB,EADe,CAACvB,EAAUgB,KAEnC,MAAOM,GACPL,QAAQC,IAAI,QAASI,GALD,2CAAxB,uD,OCIWI,EAAQ,WACnB,MAAyCC,aAAY,SAACC,GAAD,MAAuB,CAC1EJ,gBAAiBI,EAAMC,UACvBT,YAAaQ,EAAME,UAFbN,EAAR,EAAQA,gBAAiBJ,EAAzB,EAAyBA,YAKzB,EAAgCW,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBgC,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOf,EAAP,KAAiBiB,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAO9B,EAAP,KAAkBiC,EAAlB,KACA,EAA8BH,mBAAS,IAAvC,mBAAO7B,EAAP,KAAgBiC,EAAhB,KAEMhC,EAAWiC,cACXC,EAAUC,cACVT,EAAyBU,MAAcC,UAEvCC,EAAe,uCAAG,WAAOC,GAAP,SAAAtC,EAAA,6DACtBsC,EAAMC,iBADgB,SAEhBxC,EAASJ,EAAsBC,EAAUC,EAAWC,IAFpC,uBAGhBC,EAASY,EAAsBC,EAAUf,EAAWC,IAHpC,uBAIhBC,EAASkB,EAAoBpB,EAAWC,IAJxB,uBAKhBC,EAASsB,EAAwBzB,EAAUgB,IAL3B,OAMtBqB,EAAQO,KAAK,KANS,4CAAH,sDASfC,EAAoB,CAAC7C,EAAUgB,GAC/B8B,EAAgB,CAAC7C,EAAWC,GAE5B6C,EACJvB,EAAgBwB,aAAeH,EAAkBG,WAE7CC,EAAgB7B,EAAY4B,aAAeF,EAAcE,WAEzDE,EACJlD,GACAgB,GACAf,GACAC,KACE6C,IAAsBE,GAEpBE,KACJ3B,EAAgB4B,SAAUhC,EAAYgC,QAExC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,uBAAMC,SAAUf,EAAiBY,UAAWC,IAAOG,KAAnD,UACE,sBAAKJ,UAAWC,IAAOI,UAAvB,UACE,sBAAKL,UAAWC,IAAOK,iBAAvB,UACE,uBAAON,UAAWC,IAAOM,MAAzB,uBACA,yBACEC,UAAQ,EACRC,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAOhC,EAAYgC,EAAEC,OAAOH,QACtCT,UAAWC,IAAOY,QAJpB,UAME,wBAAQJ,MAAM,GAAGK,UAAQ,EAAzB,0BAGCtC,EACGA,EAAUuC,KAAI,SAACC,GAAD,OACZrD,IAAaqD,EAAQC,MACnB,wBAA4BH,UAAQ,EAApC,SACGE,EAAQC,OADED,EAAQP,OAIrB,iCAA6BO,EAAQC,OAAxBD,EAAQP,UAGzB,WAGR,sBAAKT,UAAWC,IAAOK,iBAAvB,UACE,uBAAON,UAAWC,IAAOM,MAAzB,uBACA,yBACEC,UAAQ,EACRC,MAAO9C,EACP+C,SAAU,SAACC,GAAD,OAAO/B,EAAY+B,EAAEC,OAAOH,QACtCT,UAAWC,IAAOY,QAJpB,UAME,wBAAQJ,MAAM,GAAGK,UAAQ,EAAzB,0BAGCtC,EACGA,EAAUuC,KAAI,SAACC,GAAD,OACZrE,IAAaqE,EAAQC,MACnB,wBAA4BH,UAAQ,EAApC,SACGE,EAAQC,OADED,EAAQP,OAIrB,iCAA6BO,EAAQC,OAAxBD,EAAQP,UAGzB,cAIV,sBAAKT,UAAWC,IAAOiB,MAAvB,UACE,sBAAKlB,UAAWC,IAAOkB,eAAvB,UACE,uBAAOnB,UAAWC,IAAOM,MAAzB,wBACA,cAAC,IAAD,CACEC,UAAQ,EACRY,gBAAgB,eAChBC,SAAUzE,EACV8D,SAAU,SAACY,GAAD,OAAUzC,EAAayC,IACjCC,WAAW,aACXvB,UAAWC,IAAOuB,KAClBC,QAAS,IAAID,UAGjB,sBAAKxB,UAAWC,IAAOkB,eAAvB,UACE,uBAAOnB,UAAWC,IAAOM,MAAzB,sBACA,cAAC,IAAD,CACEC,UAAQ,EACRY,gBAAgB,eAChBC,SAAUxE,EACV6D,SAAU,SAACY,GAAD,OAAUxC,EAAWwC,IAC/BC,WAAW,aACXG,QAAS9E,EACT6E,QAAS,IAAID,KACbxB,UAAWC,IAAOuB,aAIxB,wBACEjE,KAAK,SACLyC,UAAWH,EAAYI,IAAO0B,OAAS1B,IAAO2B,OAFhD,SAIG9B,EAAkB,SAAW,iB,kBC5H3B+B,EAAQ,WAqBnB,IApBA,MACEvD,aAAY,SAACC,GAAD,MAAuB,CACjCuD,cAAevD,EAAMuD,cACrBC,cAAexD,EAAMwD,cACrB5D,gBAAiBI,EAAMC,UACvBT,YAAaQ,EAAME,UALfqD,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,cAAe5D,EAAtC,EAAsCA,gBAAiBJ,EAAvD,EAAuDA,YAQjDiE,EAAoCC,MAAM/E,KAAK4E,GAC/CI,EAAoCD,MAAM/E,KAAK6E,GAC/CpF,EAAWwB,EAAgB,GAC3BR,EAAWQ,EAAgB,GAG3BvB,EAAYuF,IAAOpE,EAAY,IAC/BlB,EAAUsF,IAAOpE,EAAY,IAC/BqE,EAAcD,IAAOvF,GAEnB6B,EAAQwD,QAEPG,EAAcvF,GACnB4B,EAAMc,KAAK,CAAEiC,KAAMW,IAAOC,GAAaC,OAAO,OAC9CD,EAAcD,IAAOC,GAAaE,IAAI,EAAG,QAM3C,IAFA,IAAMhF,EAAO2E,QAEJM,EAAI,EAAGA,EAAI9D,EAAMsB,OAAQwC,IAAK,CAAC,IAAD,EAC/BC,EAAiBR,EAAgBO,GAAKP,EAAgBO,GAAGV,MAAQ,EACjEY,EAAiBP,EAAgBK,GAAKL,EAAgBK,GAAGV,MAAQ,EAEvEvE,EAAKiC,MAAL,GACEiC,KAAM/C,EAAM8D,GAAGf,MADjB,cAEG7E,EAAW6F,GAFd,cAGG7E,EAAW8E,GAHd,IAOF,OACE,qCACE,cAAC,EAAD,IACA,qBAAKzC,UAAWC,IAAOC,UAAvB,SACGvD,GAAYgB,GACX,sBAAKqC,UAAWC,IAAOyC,eAAvB,UACE,mEACA,+BACG/F,EADH,QACkBgB,KAElB,eAAC,IAAD,CAAWgF,MAAO,IAAKC,OAAQ,IAAKtF,KAAMA,EAA1C,UACE,cAAC,IAAD,CAAeuF,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,CACEC,UAAW,SAACtC,GAAD,OAAW,IAAIuC,KAAKC,aAAa,MAAMZ,OAAO5B,MAE3D,cAAC,IAAD,IACA,cAAC,IAAD,CAAMlD,KAAK,WAAWuF,QAASnG,EAAUuG,OAAO,YAChD,cAAC,IAAD,CAAM3F,KAAK,WAAWuF,QAASnF,EAAUuF,OAAO,wB,kBCxEvD,SAASC,EAAaC,GAC3B,IAAMC,EAAe,uCAAG,WAAOhE,GAAP,SAAAtC,EAAA,sDACtBsC,EAAMC,iBACN8D,EAAMpE,QAAQO,KAAK,KAFG,2CAAH,sDAIrB,OACE,sBAAKS,UAAWC,IAAOC,UAAvB,UACE,gDACA,wBAAQoD,QAASD,EAAjB,0BCPC,IAAME,EAAM,WACjB,OACE,cAAC,IAAD,CAAeC,SAAUC,SAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,WAAWC,UAAW/B,IACxC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,gBAAgBC,UAAWT,IAC7C,cAAC,IAAD,CAAUhG,GAAI,uB,iBCLtB,IAOe0G,EAPEC,0BAAgB,CAC/BhC,cCLa,WAA4C,IAArBvD,EAAoB,uDAAZ,GAAIwF,EAAQ,uCACxD,OAAQA,EAAOxG,MACb,KAAKxB,EACH,OAAOgI,EAAOvG,QAEhB,QACE,OAAOe,IDAXwD,cENa,WAA4C,IAArBxD,EAAoB,uDAAZ,GAAIwF,EAAQ,uCACxD,OAAQA,EAAOxG,MACb,KAAKvB,EACH,OAAO+H,EAAOvG,QAEhB,QACE,OAAOe,IFCXC,UGPa,WAAwC,IAArBD,EAAoB,uDAAZ,GAAIwF,EAAQ,uCACpD,OAAQA,EAAOxG,MACb,KAAKtB,EACH,OAAO8H,EAAOvG,QAEhB,QACE,OAAOe,IHEXE,MIRa,WAAoC,IAArBF,EAAoB,uDAAZ,GAAIwF,EAAQ,uCAChD,OAAQA,EAAOxG,MACb,KAAKrB,EACH,OAAO6H,EAAOvG,QAEhB,QACE,OAAOe,M,SCEEyF,EALDC,sBACZJ,EACAK,8BAAoBC,0BAAgBC,O,OCDtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.8c70d5f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cases_Container__36jjf\",\"CasesContainer\":\"Cases_CasesContainer__iFOf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Panel_Container__2YgDf\",\"Form\":\"Panel_Form__3tg94\",\"Countries\":\"Panel_Countries__33ngX\",\"CountryContainer\":\"Panel_CountryContainer__3_ZDj\",\"Label\":\"Panel_Label__3XF7V\",\"Country\":\"Panel_Country__z-78h\",\"Dates\":\"Panel_Dates__FsPv_\",\"DatesContainer\":\"Panel_DatesContainer__1G_5o\",\"Date\":\"Panel_Date__hsoTz\",\"Submit\":\"Panel_Submit__ehdlp\",\"active\":\"Panel_active__1_1u6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PageNotFound_Container__3PsQn\"};","export const SET_COUNTRY_A = \"SETCOUNTRYA\";\nexport const SET_COUNTRY_B = \"SETCOUNTRYB\";\nexport const SET_COUNTRIES = \"SETCOUNTRIES\";\nexport const SET_DATES = \"SETDATES\";\n","import axios from \"axios\";\n\nconst baseUrl = \"https://api.covid19api.com/total/country/\";\n\nconst Axios = axios.create({\n  baseUrl: \"https://api.covid19api.com/total/country/\",\n});\n\nAxios.defaults.baseUrl = baseUrl;\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport default Axios;\n","import { SET_COUNTRY_A } from \"../types\";\nimport Axios from \"../../axios\";\n\nexport const countryACasesAction = (cases) => {\n  return {\n    type: SET_COUNTRY_A,\n    payload: cases,\n  };\n};\n\nexport const countryACasesFunction =\n  (countryA, startDate, endDate) => async (dispatch) => {\n    try {\n      const response = await Axios.get(\n        `https://api.covid19api.com/total/country/${countryA}/status/confirmed`,\n        { params: { from: startDate, to: endDate } }\n      );\n      dispatch(countryACasesAction(response.data));\n    } catch (error) {\n      if (error.response) {\n        // client received an error response (5xx, 4xx)\n        return error.response;\n      } else if (error.request) {\n        // client never received a response, or request never left\n        return error.request;\n      } else {\n        // anything else\n        return error;\n      }\n    }\n  };\n","import { SET_COUNTRY_B } from \"../types\";\nimport Axios from \"../../axios\";\n\nexport const countryBAction = (cases) => {\n  return {\n    type: SET_COUNTRY_B,\n    payload: cases,\n  };\n};\n\nexport const countryBCasesFunction =\n  (countryB, startDate, endDate) => async (dispatch) => {\n    try {\n      const response = await Axios.get(\n        `https://api.covid19api.com/total/country/${countryB}/status/confirmed`,\n        { params: { from: startDate, to: endDate } }\n      );\n      dispatch(countryBAction(response.data));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n","import { SET_DATES } from \"../types\";\n\nexport const chosenDatesAction = (chosenDates) => {\n  return {\n    type: SET_DATES,\n    payload: chosenDates,\n  };\n};\n\nexport const chosenDatesFunction = (startDate, endDate) => async (dispatch) => {\n  try {\n    const chosenDates = [startDate, endDate];\n    dispatch(chosenDatesAction(chosenDates));\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n};\n","import { SET_COUNTRIES } from \"../types\";\n\nexport const chosenCountriesAction = (chosenCountries) => {\n  return {\n    type: SET_COUNTRIES,\n    payload: chosenCountries,\n  };\n};\n\nexport const chosenCountriesFunction =\n  (countryA, countryB) => async (dispatch) => {\n    try {\n      const chosenCountries = [countryA, countryB];\n      dispatch(chosenCountriesAction(chosenCountries));\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport countryList from \"react-select-country-list\";\nimport styles from \"./Panel.module.scss\";\nimport { countryACasesFunction } from \"../../store/actions/countryACasesAction\";\nimport { countryBCasesFunction } from \"../../store/actions/countryBCasesAction\";\nimport { chosenDatesFunction } from \"../../store/actions/chosenDatesAction\";\nimport { chosenCountriesFunction } from \"../../store/actions/chosenCountriesAction\";\nimport { Countries } from \"./types\";\nimport { RootState } from \"../../store\";\n\nexport const Panel = () => {\n  const { chosenCountries, chosenDates } = useSelector((state: RootState) => ({\n    chosenCountries: state.countries,\n    chosenDates: state.dates,\n  }));\n\n  const [countryA, setCountryA] = useState(\"\");\n  const [countryB, setCountryB] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const countries: Countries[] = countryList().getData();\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    await dispatch(countryACasesFunction(countryA, startDate, endDate));\n    await dispatch(countryBCasesFunction(countryB, startDate, endDate));\n    await dispatch(chosenDatesFunction(startDate, endDate));\n    await dispatch(chosenCountriesFunction(countryA, countryB));\n    history.push(\"/\");\n  };\n\n  const combinedCountries = [countryA, countryB];\n  const combinedDates = [startDate, endDate];\n\n  const countriesAreEqual =\n    chosenCountries.toString() === combinedCountries.toString();\n\n  const datesAreEqual = chosenDates.toString() === combinedDates.toString();\n\n  const condition =\n    countryA &&\n    countryB &&\n    startDate &&\n    endDate &&\n    (!countriesAreEqual || !datesAreEqual);\n\n  const updateCondition =\n    chosenCountries.length && chosenDates.length ? true : false;\n\n  return (\n    <div className={styles.Container}>\n      <form onSubmit={onSubmitHandler} className={styles.Form}>\n        <div className={styles.Countries}>\n          <div className={styles.CountryContainer}>\n            <label className={styles.Label}>COUNTRY 1</label>\n            <select\n              required\n              value={countryA}\n              onChange={(e) => setCountryA(e.target.value)}\n              className={styles.Country}\n            >\n              <option value=\"\" disabled>\n                -- Select --\n              </option>\n              {countries\n                ? countries.map((country) =>\n                    countryB === country.label ? (\n                      <option key={country.value} disabled>\n                        {country.label}\n                      </option>\n                    ) : (\n                      <option key={country.value}>{country.label}</option>\n                    )\n                  )\n                : null}\n            </select>\n          </div>\n          <div className={styles.CountryContainer}>\n            <label className={styles.Label}>COUNTRY 2</label>\n            <select\n              required\n              value={countryB}\n              onChange={(e) => setCountryB(e.target.value)}\n              className={styles.Country}\n            >\n              <option value=\"\" disabled>\n                -- Select --\n              </option>\n              {countries\n                ? countries.map((country) =>\n                    countryA === country.label ? (\n                      <option key={country.value} disabled>\n                        {country.label}\n                      </option>\n                    ) : (\n                      <option key={country.value}>{country.label}</option>\n                    )\n                  )\n                : null}\n            </select>\n          </div>\n        </div>\n        <div className={styles.Dates}>\n          <div className={styles.DatesContainer}>\n            <label className={styles.Label}>START DATE</label>\n            <DatePicker\n              required\n              placeholderText=\"-- Select --\"\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n              className={styles.Date}\n              maxDate={new Date()}\n            />\n          </div>\n          <div className={styles.DatesContainer}>\n            <label className={styles.Label}>END DATE</label>\n            <DatePicker\n              required\n              placeholderText=\"-- Select --\"\n              selected={endDate}\n              onChange={(date) => setEndDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n              minDate={startDate}\n              maxDate={new Date()}\n              className={styles.Date}\n            />\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          className={condition ? styles.active : styles.Submit}\n        >\n          {updateCondition ? \"UPDATE\" : \"SEARCH\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport moment from \"moment\";\nimport { Panel } from \"../Panel\";\nimport styles from \"./Cases.module.scss\";\nimport { RootState } from \"../../store\";\nimport { CountryDetails } from \"./types\";\n\nexport const Cases = () => {\n  const { countryACases, countryBCases, chosenCountries, chosenDates } =\n    useSelector((state: RootState) => ({\n      countryACases: state.countryACases,\n      countryBCases: state.countryBCases,\n      chosenCountries: state.countries,\n      chosenDates: state.dates,\n    }));\n\n  const countryADetails: CountryDetails[] = Array.from(countryACases);\n  const countryBDetails: CountryDetails[] = Array.from(countryBCases);\n  const countryA = chosenCountries[0];\n  const countryB = chosenCountries[1];\n\n  // list of date range\n  const startDate = moment(chosenDates[0]);\n  const endDate = moment(chosenDates[1]);\n  let currentDate = moment(startDate);\n\n  const dates = Array();\n\n  while (currentDate < endDate) {\n    dates.push({ Date: moment(currentDate).format(\"L\") });\n    currentDate = moment(currentDate).add(1, \"days\");\n  }\n\n  // create data for recharts\n  const data = Array();\n\n  for (let i = 0; i < dates.length; i++) {\n    const casesA: number = countryADetails[i] ? countryADetails[i].Cases : 0;\n    const casesB: number = countryBDetails[i] ? countryBDetails[i].Cases : 0;\n\n    data.push({\n      Date: dates[i].Date,\n      [countryA]: casesA,\n      [countryB]: casesB,\n    });\n  }\n\n  return (\n    <>\n      <Panel />\n      <div className={styles.Container}>\n        {countryA && countryB && (\n          <div className={styles.CasesContainer}>\n            <h2>Total Number of Coronavirus Cases</h2>\n            <h4>\n              {countryA} vs. {countryB}\n            </h4>\n            <LineChart width={750} height={600} data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"Date\" />\n              <YAxis />\n              <Tooltip\n                formatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n              />\n              <Legend />\n              <Line type=\"monotone\" dataKey={countryA} stroke=\"#8884d8\" />\n              <Line type=\"monotone\" dataKey={countryB} stroke=\"#82ca9d\" />\n            </LineChart>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport styles from \"./PageNotFound.module.scss\";\n\nexport function PageNotFound(props) {\n  const tryAgainHandler = async (event) => {\n    event.preventDefault();\n    props.history.push(\"/\");\n  };\n  return (\n    <div className={styles.Container}>\n      <h1>Page Not Found</h1>\n      <button onClick={tryAgainHandler}>Try Again</button>\n    </div>\n  );\n}\n","import { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Cases } from \"../Cases\";\nimport { PageNotFound } from \"../PageNotFound\";\n\nexport const App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Cases} />\n        <Route exact path=\"/results\" component={Cases} />\n        <Route exact path=\"/pagenotfound\" component={PageNotFound} />\n        <Redirect to={\"pagenotfound\"} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import { combineReducers } from \"redux\";\nimport countryACases from \"./CountryA\";\nimport countryBCases from \"./CountryB\";\nimport countries from \"./Countries\";\nimport dates from \"./Dates\";\n\nconst reducers = combineReducers({\n  countryACases,\n  countryBCases,\n  countries,\n  dates,\n});\n\nexport default reducers;\n","import { SET_COUNTRY_A } from \"../types\";\n\nexport default function countryACases(state = [], action) {\n  switch (action.type) {\n    case SET_COUNTRY_A: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_COUNTRY_B } from \"../types\";\n\nexport default function countryBCases(state = [], action) {\n  switch (action.type) {\n    case SET_COUNTRY_B: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_COUNTRIES } from \"../types\";\n\nexport default function countries(state = [], action) {\n  switch (action.type) {\n    case SET_COUNTRIES: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_DATES } from \"../types\";\n\nexport default function dates(state = [], action) {\n  switch (action.type) {\n    case SET_DATES: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { App } from \"./components/App\";\nimport store from \"./store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}